//
// Generated by JTB 1.3.2
//

package visitor;
import syntaxtree.*;
import java.util.*;

/**
 * All GJ visitors must implement this interface.
 */

public interface GJVisitor<R,A> {

   //
   // GJ Auto class visitors
   //

   public R visit(NodeList n, A argu);
   public R visit(NodeListOptional n, A argu);
   public R visit(NodeOptional n, A argu);
   public R visit(NodeSequence n, A argu);
   public R visit(NodeToken n, A argu);

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> Expr()
    * f1 -> <EOF>
    */
   public R visit(Prog n, A argu);

   /**
    * f0 -> Abs() RApp()
    *       | Var() RApp()
    *       | Int()
    */
   public R visit(Expr n, A argu);

   /**
    * f0 -> <FN>
    * f1 -> "("
    * f2 -> RType()
    * f3 -> <VAR>
    * f4 -> RParam()
    * f5 -> ")"
    * f6 -> "{"
    * f7 -> Expr()
    * f8 -> "}"
    */
   public R visit(Abs n, A argu);

   /**
    * f0 -> ( "," RType() <VAR> RParam() )?
    */
   public R visit(RParam n, A argu);

   /**
    * f0 -> ( "(" Expr() RArg() ")" RApp() )?
    */
   public R visit(RApp n, A argu);

   /**
    * f0 -> ( "," Expr() RArg() )?
    */
   public R visit(RArg n, A argu);

   /**
    * f0 -> TInt()
    * f1 -> ( <ARROW> RType() )?
    */
   public R visit(RType n, A argu);

   /**
    * f0 -> <VAR>
    */
   public R visit(Var n, A argu);

   /**
    * f0 -> <N>
    */
   public R visit(Int n, A argu);

   /**
    * f0 -> <TINT>
    */
   public R visit(TInt n, A argu);

}
